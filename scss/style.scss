@import "mixins", "reset", "variables", "js",
  url("https://fonts.googleapis.com/css2?family=Spline+Sans+Mono:ital,wght@0,400;0,600;1,400&family=Ubuntu&display=swap");

body {
  background-color: #313244;
  font-family: "Ubuntu", sans-serif;
}

header {
  font-family: "Spline Sans Mono", sans-serif;

  @include flex-center;
  position: fixed;
  z-index: 2;
  top: 0;
  width: 100vw;
  height: $header-height;
  background: linear-gradient(
    -30deg,
    rgba($header-clr, 0.9),
    rgba($header-clr, 1)
  );
  color: $bg;
  font-size: 2rem;
}

main {
  display: grid;
  grid-template-columns: 1fr $info-width;

  section {
    pointer-events: none;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: minmax(0, 15rem);
    padding: 1rem;
    gap: 1rem;
    margin-top: $header-height;
  }

  aside {
    @include flex-center(false, true);
    flex-direction: column;
    position: fixed;
    right: 0;
    top: $header-height;
    min-height: 100vh;
    width: $info-width;
    padding: 1rem;
    background-color: $bg;
    color: $text;
    font-size: 1.5rem;
  }
}

#info {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  padding: 1rem;
  gap: 1rem;

  h3:nth-child(odd) {
    font-size: 1rem;
  }
  h3:nth-child(even) {
    font-size: 0.9rem;
  }
}

.card {
  pointer-events: all;
  cursor: pointer;
  z-index: 0;
  display: flex;
  flex-direction: column;
  height: 15rem;
  border-radius: 9px;
  padding: 1rem;
  color: $text;
  transition: all 250ms ease-in-out;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);

  &:hover {
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
    transform: scale(1.05);
    transition: all 150ms ease-in-out;
  }

  $angles: (
    1: -45deg,
    2: 0deg,
    3: 45deg,
  );

  @for $i from 1 through 3 {
    &:nth-child(3n + #{$i}) {
      background: linear-gradient(map-get($angles, $i), $bg, rgba($bg, 0.7));
    }
  }

  h2:first-of-type {
    font-size: 2rem;
    text-align: center;

    & + h2 {
      margin-top: 0.5rem;
      text-align: right;
      font-style: italic;
      font-size: .8rem;
    }
  }

  hr {
    border: 1px solid rgba($text, 0.2);
    border-radius: 10%;
    margin-top: auto;

    & + h3 {
      margin-top: 0.5rem;
      font-size: 0.8rem;
    }
  }
}

section:hover > div:not(:hover) {
  transform: scale(0.95);
  opacity: 0.7;
}

#createNew {
  position: absolute;
  transform: translateX(-50%) translateY(-300%);;
  top: 50%;
  left: 50%;
  width: 40vw;
  border-radius: 9px;
  padding: 1rem;
  background: linear-gradient(-30deg, rgba($bg, 0.1), rgba($bg, 0.7));
  box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.3);
  color: $text;

  h1 {
    text-align: center;
    font-size: 1.5rem;
    color: $text;
    margin-bottom: 1rem;
  }

  form {
    @include flex-center(true, false);
    flex-direction: column;

    input {
      all: unset;
      border-bottom: 1px solid rgba($text, 0.1);
      margin: 1rem 0;
      width: 25vw;
    }
  }
}

#status {
  @include flex-center;
  position: absolute;
  margin-top: auto;
  gap: 1rem;
  align-self: flex-end;
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 35px;

  input {
    all: unset;

    &:checked + .slider {
      background-color: $header-clr;
    }

    &:focus + .slider {
      box-shadow: 0 0 1px $header-clr;
    }

    &:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }
  }

  .slider {
    position: absolute;
    cursor: pointer;
    inset: 0;
    background-color: #313244;
    border-radius: 999px;
    transition: 400ms;

    &:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: 0.4s;
      border-radius: 50%;
    }
  }
}

.blob {
  @include flex-center;
  cursor: pointer;
  width: $blob * 1.41421356237;
  height: $blob * 1.41421356237;
  background-color: $header-clr;
  border-radius: 50%;

  &::after,
  &::before {
    content: "";
    position: absolute;
    width: $blob;
    height: 8px;
    border-radius: 999px;
    background-color: $bg;
    transition: all 1s;
  }

  &::before {
    transform: rotate(0deg);
  }

  &:hover::before {
    transform: rotate(405deg);
  }

  &:not(:hover)::before {
    transform: rotate(0deg);
  }

  &::after {
    transform: rotate(90deg);
  }

  &:hover::after {
    transform: rotate(315deg);
  }

  &:not(:hover)::after {
    transform: rotate(90deg);
  }
}

.openNew {
  margin: auto 0 calc($header-height + 5vh);
}

.closeNew {
  position: absolute;
  bottom: 2%;
  right: 2%;
}
